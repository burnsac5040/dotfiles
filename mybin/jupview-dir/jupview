#!/bin/sh

# set -eu

prog="${0##*/}"

jupview_usage() {
    cat <<-_EOF
    $(jupview_short_usage)
        ${prog} provides a way to view Jupyter Notebooks in the terminal.
        This is able to be used as a previewer with terminal file managers
        like lf, ranger, and nnn by default with no parameters given.

        The .ipynb file is converted to HTML and then is viewed with w3m.
        Bat is used for colorizing the ouput.

        Requirements:
            jupyter nbconvert
            w3m
            bat

        Options:
            -P, --pager             view .ipynb file with a pager instead of stdout
            -I, --no-input          clear input cells of .ipynb file
            -p, --no-prompt         clear input / output prompt markers (In[1]:)
            -O, --clear-output      clear output cells of .ipynb file
            -t, --theme             change syntax highlighting theme (gruvbox default)
_EOF
    exit 0
}

jupview_short_usage() {
    echo "Usage: ${prog} [--help,-h]" \
        "[--pager,-P]" \
        "[--no-input,-I]" \
        "[--no-prompt,-p]" \
        "[--clear-output,-O]" \
        "[--theme,-t]"
}

jupview_cmd() {
    page=0
    no_input=0
    no_prompt=0
    clear_output=0
    bat_theme=""
    opts=$($GETOPT -o PIpOt: -l pager,no-input,no-prompt,clear-output,theme: -- "$@")
    err=$?

    eval set -- "$opts"

    while true; do case "$1" in
        -P|--pager) page=1; shift  ;;
        -I|--no-input) no_input=1; shift  ;;
        -p|--no-prompt) no_prompt=1; shift ;;
        -O|--clear_output) clear_output=1; shift ;;
        -t|--theme) bat_theme="$2"; shift 2 ;;
        --) shift; break ;;
    esac done

    [ -x "$(command -v bat)" ] || (echo "bat is not in your \$PATH" && exit 1)
    [ -x "$(command -v w3m)" ] || (echo "w3m is not in your \$PATH" && exit 1)

    [ $err -ne 0 ] && jupview_short_usage && exit 1

    nb_cmd="jupyter nbconvert --stdout --to html"
    w3m_cmd="w3m -dump -T text/html"
    bat_cmd="bat -Pf --theme gruvbox-dark --style auto --language python"

    case "$no_input" in
      1)
        case "$no_prompt" in
          1) nb_cmd="${nb_cmd} --no-input --no-prompt" ;;
          0) nb_cmd="${nb_cmd} --no-input" ;;
        esac ;;
      0)
        case "$no_prompt" in
          1) nb_cmd="${nb_cmd} --no-prompt" ;;
          0) nb_cmd="${nb_cmd}" ;;
        esac ;;
    esac

    case "$page" in
      1)
        case "$bat_theme" in
          "") bat_cmd="bat -f --theme gruvbox-dark --style auto --language python" ;;
           *) bat_cmd="bat -f --theme ${bat_theme} --style auto --language python" ;;
        esac ;;
      0)
        case "$bat_theme" in
          "") bat_cmd=${bat_cmd} ;;
           *) bat_cmd="bat -Pf --theme ${bat_theme} --style auto --language python" ;;
        esac ;;
    esac

    file="$(basename "$1")"
    ext=${file##*.}

    if [ ! -f "$1" ]; then
        echo "$(basename "$@"): $1: No such file"
        exit 2
    fi

    if [ "$ext" != "ipynb" ]; then
      echo "File type must be '.ipynb'"
      exit 2
    fi

    if [ $clear_output = 1 ]; then
        temp="/tmp/${file}"
        jupyter nbconvert --clear-output --to notebook --output="/tmp/${file}" "$1" >/dev/null 2>&1
        eval "$nb_cmd $temp 2>/dev/null | $w3m_cmd | $bat_cmd && rm -rf $temp"
    else
        eval "$nb_cmd $1 2>/dev/null | $w3m_cmd | $bat_cmd"
    fi
}


if [ "$1" = "help" ] || [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    jupview_usage
fi

jupview_cmd "$@"
