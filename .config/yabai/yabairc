#!/usr/bin/env sh

#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
# sudo yabai --load-sa
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# general space settings
yabai -m space 1 --label one
yabai -m space 2 --label two
yabai -m space 3 --label three
yabai -m space 4 --label four
yabai -m space 5 --label five
yabai -m space 6 --label six
yabai -m space 9 --label nine

# apps to ignore
yabai -m rule --add app="^System Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-Elements$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-EventViewer$" sticky=on layer=above manage=off
yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off
yabai -m rule --add app="^Alfred Preferences$" sticky=on layer=above manage=off
yabai -m rule --add app="^Disk Utility$" sticky=on layer=above manage=off
yabai -m rule --add app="^System Information$" sticky=on layer=above manage=off
yabai -m rule --add app="^Activity Monitor$" sticky=on layer=above manage=off
yabai -m rule --add app="^Path Finder$" manage=off
yabai -m rule --add app="^TeamViewer$" sticky=off layer=above manage=off
yabai -m rule --add app="Fantastical" manage=off
yabai -m rule --add app=R manage=off
yabai -m rule --add app="^iTerm2$" manage=on
yabai -m rule --add app="^Flux$" manage=off
yabai -m rule --add app="^console$" manage=off

# global settings
# yabai -m config focus_follows_mouse         autoraise
# yabai -m config focus_follows_mouse         on
yabai -m config window_placement              second_child
yabai -m config window_topmost                off
#yabai -m config window_shadow                float
yabai -m config window_opacity                off
yabai -m config window_opacity_duration       0.00
yabai -m config active_window_opacity         1.0
#yabai -m config normal_window_opacity        0.97

# limelight is separate
yabai -m config window_border                 off
killall limelight &> /dev/null
limelight &> /dev/null &

# if sip is disabled
# yabai -m config window_border               on
# yabai -m config window_border_width         3
# yabai -m config active_window_border_color  0xFF40FF00
# yabai -m config normal_window_border_color  0x00FFFFFF
# yabai -m config insert_feedback_color       0xffd75f5f

## some other settings
yabai -m config auto_balance                  off
yabai -m config split_ratio                   0.50
yabai -m config mouse_modifier                ctrl
# crtl + right click = resize
yabai -m config mouse_action2                 resize
# ctrl + left click = move
yabai -m config mouse_action1                 move

# general space settings
# yabai -m config focused_border_skip_floating  1
# yabai -m config --space 3 layout             float

## Change how yabai looks
yabai -m config layout                          bsp
yabai -m config top_padding                     2
yabai -m config bottom_padding                  2
yabai -m config left_padding                    2
yabai -m config right_padding                   2
yabai -m config window_gap                      10

# Ubersicht
# yabai -m signal --add event=space_changed \
# action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"
# yabai -m signal --add event=display_changed \
# action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"

# yabai -m signal --add event=space_changed \
# action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"
# yabai -m signal --add event=display_changed \
# action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"

# signals
# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
# yabai -m signal --add event=space_changed action="yabai -m window --focus $(yabai -m query --windows --window | jq ".id")"
# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# testing signals
# yabai -m signal --add event=window_destroyed action="terminal-notifier -message 'window_destroyed'"
# yabai -m signal --add event=application_terminated action="terminal-notifier -message 'application_terminated'"

# focus on next window when closing
yabai -m signal --add event=window_destroyed action="bash "$HOME/mybin/winfocus-exit""
# yabai -m signal --add event=space_changed action="export CUR_ACTIVE_APP=\"iTerm2\""

echo "yabai configuration loaded.."
