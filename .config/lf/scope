#!/bin/bash

set -C -f -u
# #IFS=$'\n'
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

# Meanings of exit codes:
# code | meaning    | action of ranger
# -----+------------+-------------------------------------------
# 0    | success    | Display stdout as preview
# 1    | no preview | Display no preview at all
# 2    | plain text | Display the plain content of the file
# 3    | fix width  | Don't reload when width changes
# 4    | fix height | Don't reload when height changes


# Arguments:
FILE_PATH="${1}"         # Full path of the highlighted file
WIDTH="${2}"
HEIGHT="${3}"
IMAGE_CACHE_PATH="${4}"  # Full path that should be used to cache image preview

FILE_EXTENSION="${FILE_PATH##*.}"
FILE_EXTENSION_LOWER="$(printf "%s" "${FILE_EXTENSION}" | tr '[:upper:]' '[:lower:]')"

# mimetype=$(file --mime-type -Lb "$path")
# extension=$(/bin/echo -E "${path##*.}" | tr "[:upper:]" "[:lower:]")


# Settings:
HIGHLIGHT_SIZE_MAX=262143  # 256KiB
HIGHLIGHT_TABWIDTH=8
MAXLN=200
# HIGHLIGHT_STYLE='pablo'

# Functions:
# runs a command and saves its output into $output.  Useful if you need
# the return value AND want to use the output in a pipe
try() { output=$(eval '"$@"'); }

# writes the output of the previously used "try" command
dump() { /bin/echo -E "$output"; }

# a common post-processing function used after most commands
trim() { head -n "$maxln"; }

# wraps highlight to treat exit code 141 (killed by SIGPIPE) as success
highlight() { command highlight "$@"; test $? = 0 -o $? = 141; }


handle_mime() {
    local mimetype="${1}"
    case "${mimetype}" in
	text/html) w3m -dump "${FILE_PATH}" && { dump | trim | fmt -s -w $WIDTH; exit 4; } ;;
	text/troff) man ./ "${FILE_PATH}" | col -b ;;
	text/* | */xml)
            if [ "$( stat --printf='%s' -- "${FILE_PATH}" )" -gt "${HIGHLIGHT_SIZE_MAX}" ]; then
                exit 2
            fi
            if [ "$( tput colors )" -ge 256 ]; then
                local highlight_format='xterm256'
            else
                local highlight_format='ansi'
            fi
            bat -Pf --tabs "${HIGHLIGHT_TABWIDTH}" --theme gruvbox --style auto -- "${FILE_PATH}" ;;
	application/zip) atool --list -- "${FILE_PATH}" ;;
  image/*) chafa --symbols=all --fill=block -O 3 --color-space=din99d -c 240 -s "${WIDTH}"x"${HEIGHT}" "${FILE_PATH}" || exit 1;;
   video/* | audio/*|application/octet-stream) mediainfo "${FILE_PATH}" || exit 1;;
  */pdf) pdftotext -l 10 -nopgbrk -q "${FILE_PATH}" - && \
        { dump | trim | fmt -s -w $WIDTH; exit 0; } || exit 1;;
  application/vnd.openxmlformats-officedocument.wordprocessingml.document) docx2txt "${FILE_PATH}" || exit 1;;
    esac
}


handle_other() {
    case "${FILE_PATH}" in
        *.tgz|*.tar.gz) tar tzf "${FILE_PATH}";;
        *.tar.bz2|*.tbz2) tar tjf "${FILE_PATH}";;
        *.tar.txz|*.txz) xz --list "${FILE_PATH}";;
        *.tar) tar tf "${FILE_PATH}";;
        *.jar|*.war|*.ear|*.oxt) unzip -l "${FILE_PATH}";;
        *.rar) unrar l "${FILE_PATH}";;
        *.7z) 7z l "${FILE_PATH}";;
        *.[1-8]) man "${FILE_PATH}" | col -b ;;
        *.o) nm "${FILE_PATH}" | less ;;
        *.torrent) transmission-show "${FILE_PATH}";;
        *.iso) iso-info --no-header -l "${FILE_PATH}";;
        *odt,*.ods,*.odp,*.sxw) odt2txt "${FILE_PATH}";;
        *.doc) catdoc "${FILE_PATH}" ;;
        *.docx) docx2txt "${FILE_PATH}" - ;;
        *.csv) cat "${FILE_PATH}" | sed s/,/\\n/g ;;
        *.json) jq --color-output . "${FILE_PATH}";;
        *.asc) bat -Pf --theme gruvbox --style auto "${FILE_PATH}";;
        *.ipynb) jupview "${FILE_PATH}";;
    esac
}

MIMETYPE="$( file --dereference --brief --mime-type -- "${FILE_PATH}" )"
handle_mime "${MIMETYPE}"
handle_other

exit 1

### Attempt to use imgcat instead of cafa to view images:
# image/*) /usr/local/bin/imgcat --width "$(identify -format '%w' "${FILE_PATH}")" --height "$(identify -format '%h' "${FILE_PATH}")" --iterm2 "${FILE_PATH}" || exit 1;;

# fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm /usr/local/bin/imgcat --width %pw --height %ph --iterm2 %c:p %pd
# image/*) chafa --symbols=all --fill=block -O 3 --color-space=din99d -c 240 -s "${WIDTH}"x"${HEIGHT}" "${FILE_PATH}" || exit 1;;
